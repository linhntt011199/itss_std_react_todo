[{"/home/ec2-user/environment/itss_std_react_todo/src/index.js":"1","/home/ec2-user/environment/itss_std_react_todo/src/App.js":"2","/home/ec2-user/environment/itss_std_react_todo/src/reportWebVitals.js":"3","/home/ec2-user/environment/itss_std_react_todo/src/components/Todo.js":"4","/home/ec2-user/environment/itss_std_react_todo/src/components/TodoItem.js":"5","/home/ec2-user/environment/itss_std_react_todo/src/components/Input.js":"6","/home/ec2-user/environment/itss_std_react_todo/src/components/Filter.js":"7","/home/ec2-user/environment/itss_std_react_todo/src/lib/util.js":"8","/home/ec2-user/environment/itss_std_react_todo/src/hooks/firestore.js":"9","/home/ec2-user/environment/itss_std_react_todo/src/lib/firebase.js":"10","/home/ec2-user/environment/itss_std_react_todo/src/components/Logout.js":"11","/home/ec2-user/environment/itss_std_react_todo/src/components/SignInScreen.js":"12","/home/ec2-user/environment/itss_std_react_todo/src/components/UploadImage.js":"13"},{"size":500,"mtime":1621569397678,"results":"14","hashOfConfig":"15"},{"size":881,"mtime":1621571595174,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1621569397678,"results":"17","hashOfConfig":"15"},{"size":2053,"mtime":1621569970832,"results":"18","hashOfConfig":"15"},{"size":389,"mtime":1621569397678,"results":"19","hashOfConfig":"15"},{"size":573,"mtime":1621569397678,"results":"20","hashOfConfig":"15"},{"size":666,"mtime":1621569397674,"results":"21","hashOfConfig":"15"},{"size":68,"mtime":1621569397678,"results":"22","hashOfConfig":"15"},{"size":1027,"mtime":1621569996180,"results":"23","hashOfConfig":"15"},{"size":2596,"mtime":1621583618086,"results":"24","hashOfConfig":"15"},{"size":1171,"mtime":1621571671802,"results":"25","hashOfConfig":"15"},{"size":359,"mtime":1621571129960,"results":"26","hashOfConfig":"15"},{"size":1849,"mtime":1621583484980,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1d6983i",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/ec2-user/environment/itss_std_react_todo/src/index.js",[],["60","61"],"/home/ec2-user/environment/itss_std_react_todo/src/App.js",[],"/home/ec2-user/environment/itss_std_react_todo/src/reportWebVitals.js",[],"/home/ec2-user/environment/itss_std_react_todo/src/components/Todo.js",["62","63","64"],"import React, { useState } from 'react';\n\n/* コンポーネント */\nimport TodoItem from './TodoItem';\nimport Input from './Input';\nimport Filter from './Filter';\n\n/* カスタムフック */\n// import useStorage from '../hooks/storage';\nimport useFireStore from '../hooks/firestore';\n\n/* ライブラリ */\nimport {getKey} from \"../lib/util\";\n\nfunction Todo() {\n  // const [items, putItems, clearItems] = useStorage();\n  const [items, addItem, updateItem, clearItems] = useFireStore();\n  \n  const [filter, setFilter] = React.useState('ALL');\n\n  const displayItems = items.filter(item => {\n    if (filter === 'ALL') return true;\n    if (filter === 'TODO') return !item.done;\n    if (filter === 'DONE') return item.done;\n  });\n  \n  const handleCheck = checked => {\n    // const newItems = items.map(item => {\n    //   if (item.key === checked.key) {\n    //     item.done = !item.done;\n    //   }\n    //   return item;\n    // });\n    // putItems(newItems);\n    updateItem(checked);\n  };\n  \n  const handleAdd = text => {\n    // putItems([...items, { key: getKey(), text, done: false }]);\n    addItem({text, done: false});\n  };\n  \n  const handleFilterChange = value => setFilter(value);\n\n  return (\n    <article class=\"panel is-danger\">\n      <div className=\"panel-heading\">\n        <span class=\"icon-text\">\n          <span class=\"icon\">\n            <i class=\"fas fa-calendar-check\"></i>\n          </span>\n          <span> ITSS Todoアプリ</span>\n        </span>\n      </div>\n      <Input onAdd={handleAdd} />\n      <Filter\n        onChange={handleFilterChange}\n        value={filter}\n      />\n      {displayItems.map(item => (\n        <TodoItem \n          key={item.id}\n          item={item}\n          onCheck={handleCheck}\n        />\n      ))}\n      <div className=\"panel-block\">\n        {displayItems.length} items\n      </div>\n      <div className=\"panel-block\">\n        <button className=\"button is-light is-fullwidth\" onClick={clearItems}>\n          全てのToDoを削除\n        </button>\n      </div>\n    </article>\n  );\n}\n\nexport default Todo;","/home/ec2-user/environment/itss_std_react_todo/src/components/TodoItem.js",[],"/home/ec2-user/environment/itss_std_react_todo/src/components/Input.js",["65"],"import React, { useState } from 'react';\n\nfunction Input( { onAdd } ) {\n  const [text, setText] = React.useState('');\n\n  const handleChange = e => setText(e.target.value);\n\n  const handleKeyDown = e => {\n    if (e.keyCode === 13) {\n      onAdd(text);\n      setText('');\n    }\n  };\n\n  return (\n    <div className=\"panel-block\">\n      <input\n        class=\"input\"\n        type=\"text\"\n        placeholder=\"Todoを入力してください\"\n        value={text}\n        onChange={handleChange}\n        onKeyDown={handleKeyDown}\n      />\n    </div>\n  );\n}\n\nexport default Input;\n","/home/ec2-user/environment/itss_std_react_todo/src/components/Filter.js",["66","67","68"],"function Filter({ value, onChange }) {\n\n  const handleClick = (key, e) => {\n    e.preventDefault();\n    onChange(key);\n  };\n\n  return (\n    <div className=\"panel-tabs\">\n      <a\n        href=\"#\"\n        onClick={handleClick.bind(null, 'ALL')}\n        className={value === 'ALL' ?  'is-active' : ''}\n      >全て</a>\n      <a\n        href=\"#\"\n        onClick={handleClick.bind(null, 'TODO')}\n        className={value === 'TODO' ?  'is-active' : ''}\n      >未完了</a>\n      <a\n        href=\"#\"\n        onClick={handleClick.bind(null, 'DONE')}\n        className={value === 'DONE' ?  'is-active' : ''}\n      >完了済み</a>\n    </div>\n  );\n}\n\nexport default Filter","/home/ec2-user/environment/itss_std_react_todo/src/lib/util.js",[],"/home/ec2-user/environment/itss_std_react_todo/src/hooks/firestore.js",["69"],"import { useState, useEffect } from 'react';\n\nimport { getFbItems, addFbItem, updateFbItem, deleteFbItem } from \"../lib/firebase\";\n\nfunction useFireStore() {\n  const [items, setItems] = useState([]);\n\n  useEffect(() => {\n    getItems();\n  }, [items]);\n\n  const getItems = async () => {\n    const items = await getFbItems();\n    setItems(items);\n  };\n\n  const addItem = async item => {\n    const newItem = { text: item.text, done: item.done };\n    await addFbItem(newItem);\n    setItems([...items, newItem]);\n  };\n\n  const updateItem = async checked => {\n    const newItem = { ...checked, done: !checked.done };\n    await updateFbItem(newItem, checked.id);\n    const newItems = items.map((item) => {\n      if (item.id === checked.id) {\n        item.done = !checked.done;\n      }\n      return item;\n    })\n    setItems(newItems);\n  }\n\n  const deleteItems = () => {\n    items.map(item => {\n      deleteFbItem(item);\n    })\n    setItems([]);\n  };\n\n  return [items, addItem, updateItem, deleteItems];\n}\n\nexport default useFireStore;","/home/ec2-user/environment/itss_std_react_todo/src/lib/firebase.js",[],"/home/ec2-user/environment/itss_std_react_todo/src/components/Logout.js",["70"],"import React from 'react';\nimport firebase from '../lib/firebase';\nimport SignInScreen from './SignInScreen';\nimport Todo from './Todo';\nimport UploadImage from './UploadImage';\nimport { updateUser } from \"../lib/firebase\";\n\nfunction Logout({currentUserImage, currentUserId, currentUserName}){\n    console.log(currentUserName);\n    const signOut = () => {\n      firebase.auth().signOut();\n      window.location = \"index.html\";\n    }\n    const changeImage = async downloadUrl => {\n      await updateUser(currentUserId, downloadUrl);\n    }\n\n    if(currentUserId != \"\"){\n        return (\n            <div className=\"navbar-begin\">\n              <div className=\"navbar-item\">\n                <UploadImage \n                  userImage={currentUserImage}\n                  changeImage={changeImage}\n                />\n                &nbsp;{currentUserName}\n              </div>\n              <div className=\"navbar-item\">\n                <button className=\"button is-danger is-light is-small\" onClick={signOut}> Logout </button>\n              </div>\n              <Todo/>\n            </div >\n        )\n    }else{\n        return <SignInScreen/>\n    }\n};\n\nexport default Logout;","/home/ec2-user/environment/itss_std_react_todo/src/components/SignInScreen.js",[],"/home/ec2-user/environment/itss_std_react_todo/src/components/UploadImage.js",["71","72"],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":1,"column":17,"nodeType":"79","messageId":"80","endLine":1,"endColumn":25},{"ruleId":"77","severity":1,"message":"81","line":13,"column":9,"nodeType":"79","messageId":"80","endLine":13,"endColumn":15},{"ruleId":"82","severity":1,"message":"83","line":21,"column":42,"nodeType":"84","messageId":"85","endLine":21,"endColumn":44},{"ruleId":"77","severity":1,"message":"78","line":1,"column":17,"nodeType":"79","messageId":"80","endLine":1,"endColumn":25},{"ruleId":"86","severity":1,"message":"87","line":10,"column":7,"nodeType":"88","endLine":14,"endColumn":8},{"ruleId":"86","severity":1,"message":"87","line":15,"column":7,"nodeType":"88","endLine":19,"endColumn":8},{"ruleId":"86","severity":1,"message":"87","line":20,"column":7,"nodeType":"88","endLine":24,"endColumn":8},{"ruleId":"82","severity":1,"message":"89","line":36,"column":20,"nodeType":"84","messageId":"90","endLine":36,"endColumn":22},{"ruleId":"91","severity":1,"message":"92","line":18,"column":22,"nodeType":"93","messageId":"94","endLine":18,"endColumn":24},{"ruleId":"95","severity":1,"message":"96","line":18,"column":20,"nodeType":"88","endLine":18,"endColumn":96},{"ruleId":"95","severity":1,"message":"96","line":22,"column":21,"nodeType":"88","endLine":22,"endColumn":42},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'getKey' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","Array.prototype.map() expects a return value from arrow function.","expectedInside","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]